<Activity mc:Ignorable="sap sap2010" x:Class="Main" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:aa="clr-namespace:Autossential.Activities;assembly=Autossential.Activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Overwrites the flow configuration by this one. Can be Producer, Consumer or Hybrid." Name="in_Flow" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Overwrites the default Folder Name defined in the configuration files by this one." Name="in_OrchestratorFolderName" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Overwrites the default QueueName defined in the configuration files by this one." Name="in_QueueName" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Allows define an external configuration file to be merged during bot execution. If a Flow or a QueueName is defined in the file, it will be overwritten by the dedicated in_Flow and in_QueueName arguments if they are specified." Name="in_ConfigPathToMerge" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1208,1152</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="34">
      <x:String>Autossential.Activities</x:String>
      <x:String>Autossential.Configuration.Core</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>System.Windows.Forms</x:String>
      <x:String>System.Drawing</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Autossential.Activities</AssemblyReference>
      <AssemblyReference>Autossential.Configuration.Core</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>System.Windows.Forms</AssemblyReference>
      <AssemblyReference>System.Windows.Forms.Primitives</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <StateMachine InitialState="{x:Reference __ReferenceID1}" sap2010:Annotation.AnnotationText="This template uses a text-based configuration file in YAML standards which is read with Autossential.Configuration.Activities package resulting in a ConfigSection object which is more rich in terms of features than a Dictionary object.&#xA;&#xA;This specific version of the framework take advantage on the global variable available natively from UiPath to keep the configuration data, this will help accelerate the development by skipping the necessity to pass the config variable through an argument in every flow that is needed.&#xA;&#xA;* SAMPLE CODE *&#xA;&#xA;This template comes with a sample code embedded. Just run it and see the results on Data\Sample.csv&#xA;Before start using this template for your project, please make sure to remove the sample code (marked with &quot;Remove Me&quot;) on the following files:&#xA;&#xA;- Framework\Process\Consumer.xaml&#xA;- Framework\Process\Producer.xaml&#xA;- Framework\Actions\Events\OnTransactionComplete.xaml" DisplayName="State Machine" sap:VirtualizedContainerService.HintSize="1065,618.04" sap2010:WorkflowViewState.IdRef="StateMachine_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">435,15</av:Point>
        <x:Double x:Key="StateContainerWidth">948</x:Double>
        <x:Double x:Key="StateContainerHeight">970</x:Double>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        <av:PointCollection x:Key="ConnectorLocation">460,65 460,140</av:PointCollection>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <State x:Name="__ReferenceID0" sap2010:Annotation.AnnotationText="Ends the process and close all applications used by it." DisplayName="END" sap:VirtualizedContainerService.HintSize="210,120" sap2010:WorkflowViewState.IdRef="State_1" IsFinal="True">
      <State.Entry>
        <Sequence DisplayName="Finalizes all applications and close the process" sap:VirtualizedContainerService.HintSize="472,1210" sap2010:WorkflowViewState.IdRef="Sequence_10">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke FinalizeApplications workflow" sap:VirtualizedContainerService.HintSize="410,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_18" UnSafe="False" WorkflowFileName="Framework\System\Applications\FinalizeApps.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <scg:Dictionary x:TypeArguments="x:String, Argument" />
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <If Condition="[BotException IsNot Nothing AndAlso Not TypeOf BotException Is BusinessRuleException]" DisplayName="If the application is ending with system error" sap:VirtualizedContainerService.HintSize="410,946" sap2010:WorkflowViewState.IdRef="If_10">
            <If.Then>
              <Sequence DisplayName="End with exception" sap:VirtualizedContainerService.HintSize="376,382" sap2010:WorkflowViewState.IdRef="Sequence_14">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log unsuccessful execution" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Error" Message="[String.Format(g_Config.AsString(&quot;Framework_ApplicationException&quot;), BotException.Message, BotException.Source)]" />
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke OnEnd workflow" sap:VirtualizedContainerService.HintSize="334,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_19" UnSafe="False" WorkflowFileName="Framework\Actions\Events\OnEnd.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="s:Exception" x:Key="in_Exception">[BotException]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence DisplayName="End with success" sap:VirtualizedContainerService.HintSize="376,382" sap2010:WorkflowViewState.IdRef="Sequence_15">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log successful execution" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_8" Message="[g_Config.AsString(&quot;Framework_SuccessfulExecution&quot;)]" />
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke OnEnd workflow" sap:VirtualizedContainerService.HintSize="334,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_20" UnSafe="False" WorkflowFileName="Framework\Actions\Events\OnEnd.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="s:Exception" x:Key="in_Exception">[Nothing]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </Sequence>
            </If.Else>
          </If>
        </Sequence>
      </State.Entry>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">355,610</av:Point>
          <av:Size x:Key="ShapeSize">210,120</av:Size>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Double x:Key="StateContainerWidth">198</x:Double>
          <x:Double x:Key="StateContainerHeight">47.04000000000008</x:Double>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </State>
    <State x:Name="__ReferenceID1" sap2010:Annotation.AnnotationText="Reads the configuration file and initialize applications used in the process." DisplayName="INIT" sap:VirtualizedContainerService.HintSize="620,2283" sap2010:WorkflowViewState.IdRef="State_2">
      <State.Entry>
        <TryCatch DisplayName="Tries to execute the initialization procedures" sap:VirtualizedContainerService.HintSize="574,1837" sap2010:WorkflowViewState.IdRef="TryCatch_1">
          <TryCatch.Try>
            <Sequence DisplayName="Initialization procedures" sap:VirtualizedContainerService.HintSize="536,1609" sap2010:WorkflowViewState.IdRef="Sequence_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Resets BotException" sap:VirtualizedContainerService.HintSize="502,114" sap2010:WorkflowViewState.IdRef="Assign_1">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:Exception">[BotException]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                </Assign.Value>
              </Assign>
              <If sap2010:Annotation.AnnotationText="An uninitialized Config object indicates that it is the first run of the process." Condition="[g_Config Is Nothing]" DisplayName="If is first-run, read configuration file and initialize settings" sap:VirtualizedContainerService.HintSize="502,1036" sap2010:WorkflowViewState.IdRef="If_4">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence DisplayName="Executes the procedures on the first run" sap:VirtualizedContainerService.HintSize="468,746" sap2010:WorkflowViewState.IdRef="Sequence_2">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:LogMessage DisplayName="Log Message screen resolution" sap:VirtualizedContainerService.HintSize="434,173" sap2010:WorkflowViewState.IdRef="LogMessage_12" Message="[String.Format(&quot;The primary screen resolution is: {0} x {1}&quot;, Screen.PrimaryScreen.Bounds.Width.ToString, Screen.PrimaryScreen.Bounds.Height.ToString)]" />
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke InitAllSettings workflow" sap:VirtualizedContainerService.HintSize="434,204" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Framework\System\Initialization\InitAllSettings.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <scg:Dictionary x:TypeArguments="x:String, Argument" />
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke UpdateSettings workflow" sap:VirtualizedContainerService.HintSize="434,204" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Framework\System\Initialization\UpdateSettings.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="in_Flow">[in_Flow]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_OrchestratorFolderName">[in_OrchestratorFolderName]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_QueueName">[in_QueueName]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_ConfigPathToMerge">[in_ConfigPathToMerge]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <Assign DisplayName="Assigns the RuntimeFlow with its initial value" sap:VirtualizedContainerService.HintSize="434,105" sap2010:WorkflowViewState.IdRef="Assign_4">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[RuntimeFlow]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[If (g_Config.AsString("Flow") = "Hybrid", "Producer", g_Config.AsString("Flow"))]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,89" sap2010:WorkflowViewState.IdRef="Sequence_18">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Sequence>
                </If.Else>
              </If>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke FinalizeApps workflow" sap:VirtualizedContainerService.HintSize="502,204" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Framework\System\Applications\FinalizeApps.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <scg:Dictionary x:TypeArguments="x:String, Argument" />
                </ui:InvokeWorkflowFile.Arguments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InvokeWorkflowFile>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke StartAllApps workflow" sap:VirtualizedContainerService.HintSize="502,195" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Framework\Actions\Applications\StartAllApps.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <scg:Dictionary x:TypeArguments="x:String, Argument" />
                </ui:InvokeWorkflowFile.Arguments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InvokeWorkflowFile>
            </Sequence>
          </TryCatch.Try>
          <TryCatch.Catches>
            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="540,22" sap2010:WorkflowViewState.IdRef="Catch`1_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ActivityAction x:TypeArguments="s:Exception">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                </ActivityAction.Argument>
                <Assign sap2010:Annotation.AnnotationText="Failures during initialization leads the process to FAILURE state." DisplayName="Set exception to BotException" sap:VirtualizedContainerService.HintSize="434,113" sap2010:WorkflowViewState.IdRef="Assign_5">
                  <Assign.To>
                    <OutArgument x:TypeArguments="s:Exception">[BotException]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                  </Assign.Value>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Assign>
              </ActivityAction>
            </Catch>
          </TryCatch.Catches>
        </TryCatch>
      </State.Entry>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">360,140</av:Point>
          <av:Size x:Key="ShapeSize">200,120</av:Size>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Double x:Key="StateContainerWidth">188</x:Double>
          <x:Double x:Key="StateContainerHeight">32</x:Double>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <State.Transitions>
        <Transition DisplayName="Producer" sap:VirtualizedContainerService.HintSize="536.8,772.8" sap2010:WorkflowViewState.IdRef="Transition_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:PointCollection x:Key="ConnectorLocation">360,194 190,194 190,500</av:PointCollection>
              <x:Int32 x:Key="SrcConnectionPointIndex">33</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">34</x:Int32>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.To>
            <State x:Name="__ReferenceID4" sap2010:Annotation.AnnotationText="Performs tasks related to the producer or linear phase." DisplayName="PRODUCER" sap:VirtualizedContainerService.HintSize="200,120" sap2010:WorkflowViewState.IdRef="State_3">
              <State.Entry>
                <Sequence sap2010:Annotation.AnnotationText="Executes the linear/producer flow" DisplayName="Execute Linear/Procuder Flow" sap:VirtualizedContainerService.HintSize="534,1118" sap2010:WorkflowViewState.IdRef="Sequence_16">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ShouldStop DisplayName="Check Stop Signal" sap:VirtualizedContainerService.HintSize="472,90" sap2010:WorkflowViewState.IdRef="ShouldStop_2" Result="[ShouldStop]" />
                  <If Condition="[ShouldStop]" DisplayName="Should Stop or Execute Producer" sap:VirtualizedContainerService.HintSize="472,846" sap2010:WorkflowViewState.IdRef="If_12">
                    <If.Then>
                      <ui:LogMessage DisplayName="Log message (Stop process requested)" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_11" Message="[g_Config.AsString(&quot;Framework_StopProcessRequested&quot;)]" />
                    </If.Then>
                    <If.Else>
                      <TryCatch DisplayName="Tries to execute the Producer process" sap:VirtualizedContainerService.HintSize="438,523" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                        <TryCatch.Try>
                          <If Condition="[BotException Is Nothing]" DisplayName="If there is no error on state transition" sap:VirtualizedContainerService.HintSize="368,295" sap2010:WorkflowViewState.IdRef="If_5">
                            <If.Then>
                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Producer workflow" sap:VirtualizedContainerService.HintSize="334,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Framework\Processes\Producer.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                            </If.Then>
                            <If.Else>
                              <Sequence DisplayName="" sap2010:WorkflowViewState.IdRef="Sequence_20" />
                            </If.Else>
                          </If>
                        </TryCatch.Try>
                        <TryCatch.Catches>
                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ActivityAction x:TypeArguments="s:Exception">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                              </ActivityAction.Argument>
                              <Assign DisplayName="Set exception to BotException" sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_6">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="s:Exception">[BotException]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </ActivityAction>
                          </Catch>
                        </TryCatch.Catches>
                      </TryCatch>
                    </If.Else>
                  </If>
                </Sequence>
              </State.Entry>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">100,500</av:Point>
                  <av:Size x:Key="ShapeSize">200,120</av:Size>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Double x:Key="StateContainerWidth">188</x:Double>
                  <x:Double x:Key="StateContainerHeight">47.04000000000008</x:Double>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <State.Exit>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke FailsReset workflow" sap:VirtualizedContainerService.HintSize="334,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="Framework\System\Utils\FailsReset.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="s:Exception" x:Key="in_Exception">[BotException]</InArgument>
                    <InOutArgument x:TypeArguments="x:Int32" x:Key="io_FailsCount">[FailsCount]</InOutArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </State.Exit>
              <State.Transitions>
                <Transition DisplayName="Failure" sap:VirtualizedContainerService.HintSize="448.8,519.2" sap2010:WorkflowViewState.IdRef="Transition_3">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:PointCollection x:Key="ConnectorLocation">260,500 260,404 360,404</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">62</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">33</x:Int32>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.Condition>[BotException IsNot Nothing AndAlso Not ShouldStop]</Transition.Condition>
                  <Transition.To>
                    <State x:Name="__ReferenceID2" sap2010:Annotation.AnnotationText="A centralized exception handling" DisplayName="FAILURE" sap:VirtualizedContainerService.HintSize="200,120" sap2010:WorkflowViewState.IdRef="State_4">
                      <State.Entry>
                        <Sequence DisplayName="Handles the process exception" sap:VirtualizedContainerService.HintSize="595,2779" sap2010:WorkflowViewState.IdRef="Sequence_5">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If Condition="[g_Config.AsInt(&quot;Recover/MaxRetriesCount&quot;) &gt; RetriesCount AndAlso RuntimeFlow = &quot;Consumer&quot;]" DisplayName="If retry count is being used and its range is accepted, increment it; otherwise, increments the fails count." sap:VirtualizedContainerService.HintSize="533,976" sap2010:WorkflowViewState.IdRef="If_11">
                            <If.Then>
                              <Sequence DisplayName="Handles the retry count" sap:VirtualizedContainerService.HintSize="416,346" sap2010:WorkflowViewState.IdRef="Sequence_12">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <aa:Increment DisplayName="Increment retry count" sap:VirtualizedContainerService.HintSize="354,94" sap2010:WorkflowViewState.IdRef="Increment_2" Value="1" Variable="[RetriesCount]" />
                                <ui:LogMessage DisplayName="Logs the fails counter message" sap:VirtualizedContainerService.HintSize="354,164" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Warn" Message="[&quot;RetriesCount (+1) = &quot; &amp; RetriesCount]" />
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence DisplayName="Handles the fail count" sap:VirtualizedContainerService.HintSize="496,460" sap2010:WorkflowViewState.IdRef="Sequence_11">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <aa:Increment DisplayName="Increment fail count" sap:VirtualizedContainerService.HintSize="434,94" sap2010:WorkflowViewState.IdRef="Increment_1" Value="1" Variable="[FailsCount]" />
                                <ui:LogMessage DisplayName="Logs the fails counter message" sap:VirtualizedContainerService.HintSize="434,173" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Warn" Message="[&quot;FailsCount (+1) = &quot; &amp; FailsCount]" />
                                <Assign DisplayName="Resets the RetriesCount for the next transaction" sap:VirtualizedContainerService.HintSize="434,105" sap2010:WorkflowViewState.IdRef="Assign_16">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">[RetriesCount]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </If.Else>
                          </If>
                          <Sequence sap2010:Annotation.AnnotationText="Logs the current exception on the Orchestrator" DisplayName="Logging exception" sap:VirtualizedContainerService.HintSize="533,703" sap2010:WorkflowViewState.IdRef="Sequence_4">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:AddLogFields sap2010:Annotation.AnnotationText="Adds:&#xA;- TransactionStatus&#xA;- TransactionNumber&#xA;- TransactionID" DisplayName="Add transaction log fields" sap:VirtualizedContainerService.HintSize="388,194" sap2010:WorkflowViewState.IdRef="AddLogFields_1">
                              <ui:AddLogFields.Fields>
                                <InArgument x:TypeArguments="x:String" x:Key="log_TransactionStatus">ApplicationException</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="log_TransactionNumber">[TransactionNumber.ToString]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="log_TransactionID">[TransactionID]</InArgument>
                              </ui:AddLogFields.Fields>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:AddLogFields>
                            <ui:LogMessage DisplayName="Log message (Error)" sap:VirtualizedContainerService.HintSize="388,173" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Error" Message="[String.Format(g_Config.AsString(&quot;Framework_ApplicationException&quot;), BotException.Message, BotException.Source)]" />
                            <ui:RemoveLogFields sap2010:Annotation.AnnotationText="Removes:&#xA;- TransactionStatus&#xA;- TransactionNumber&#xA;- TransactionID" DisplayName="Remove transaction log fields (System Exception)" sap:VirtualizedContainerService.HintSize="388,185" sap2010:WorkflowViewState.IdRef="RemoveLogFields_1">
                              <ui:RemoveLogFields.Fields>
                                <scg:List x:TypeArguments="InArgument(x:String)" Capacity="8">
                                  <InArgument x:TypeArguments="x:String">log_TransactionStatus</InArgument>
                                  <InArgument x:TypeArguments="x:String">log_TransactionNumber</InArgument>
                                  <InArgument x:TypeArguments="x:String">log_TransactionID</InArgument>
                                </scg:List>
                              </ui:RemoveLogFields.Fields>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:RemoveLogFields>
                          </Sequence>
                          <TryCatch sap2010:Annotation.AnnotationText="Take a screenshot of the current state of the screen to facilitate debugging." DisplayName="Try taking screenshot" sap:VirtualizedContainerService.HintSize="533,463" sap2010:WorkflowViewState.IdRef="TryCatch_3">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <TryCatch.Try>
                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke TakeScreenshot workflow" sap:VirtualizedContainerService.HintSize="334,172" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\System\Utils\TakeScreenshot.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_Folder">[g_Config.AsString("ScreenshotsFolder")]</InArgument>
                                  <InOutArgument x:TypeArguments="x:String" x:Key="io_FilePath" />
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                            </TryCatch.Try>
                            <TryCatch.Catches>
                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,22" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ActivityAction x:TypeArguments="s:Exception">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="Exception" />
                                  </ActivityAction.Argument>
                                  <ui:LogMessage DisplayName="Log message (Screenshot not taken)" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Warn" Message="[&quot;Failed to take screenshot: &quot;+Exception.Message+&quot; at Source: &quot;+Exception.Source]" />
                                </ActivityAction>
                              </Catch>
                            </TryCatch.Catches>
                          </TryCatch>
                          <If Condition="[TypeOf BotException Is BusinessRuleException]" DisplayName="Determines which is the BotException type and invoke the respective event workflow" sap:VirtualizedContainerService.HintSize="533,549" sap2010:WorkflowViewState.IdRef="If_6">
                            <If.Then>
                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke OnBusinessRuleException workflow" sap:VirtualizedContainerService.HintSize="334,172" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="Framework\Actions\Events\OnBusinessException.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="s:Exception" x:Key="in_Exception">[BotException]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_RuntimeFlow">[RuntimeFlow]</InArgument>
                                  <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[TransactionItem]</InArgument>
                                  <InArgument x:TypeArguments="sd:DataRow" x:Key="in_TransactionRow">[TransactionRow]</InArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                            </If.Then>
                            <If.Else>
                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke OnException workflow" sap:VirtualizedContainerService.HintSize="334,172" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="Framework\Actions\Events\OnSystemException.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="s:Exception" x:Key="in_Exception">[BotException]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_RuntimeFlow">[RuntimeFlow]</InArgument>
                                  <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[TransactionItem]</InArgument>
                                  <InArgument x:TypeArguments="sd:DataRow" x:Key="in_TransactionRow">[TransactionRow]</InArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                            </If.Else>
                          </If>
                        </Sequence>
                      </State.Entry>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">360,350</av:Point>
                          <av:Size x:Key="ShapeSize">200,120</av:Size>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          <x:Double x:Key="StateContainerWidth">188</x:Double>
                          <x:Double x:Key="StateContainerHeight">47.04000000000008</x:Double>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <State.Transitions>
                        <Transition DisplayName="No Retries" sap:VirtualizedContainerService.HintSize="456,507" sap2010:WorkflowViewState.IdRef="Transition_12">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:PointCollection x:Key="ConnectorLocation">460,470 460,610</av:PointCollection>
                              <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
                              <x:Int32 x:Key="DestConnectionPointIndex">38</x:Int32>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Transition.To>
                            <x:Reference>__ReferenceID0</x:Reference>
                          </Transition.To>
                          <Transition.Action>
                            <ui:LogMessage DisplayName="Logs the message about the max fail number reached" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Warn" Message="[g_Config.AsString(&quot;Framework_MaxFailNumberReached&quot;)]" />
                          </Transition.Action>
                          <Transition.Condition>[FailsCount &gt; g_Config.AsInt("Recover/MaxFailsCount")]</Transition.Condition>
                        </Transition>
                        <Transition DisplayName="Recover" sap:VirtualizedContainerService.HintSize="464,488" sap2010:WorkflowViewState.IdRef="Transition_14">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:PointCollection x:Key="ConnectorLocation">490,350 490,260</av:PointCollection>
                              <x:Int32 x:Key="SrcConnectionPointIndex">50</x:Int32>
                              <x:Int32 x:Key="DestConnectionPointIndex">51</x:Int32>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Transition.To>
                            <x:Reference>__ReferenceID1</x:Reference>
                          </Transition.To>
                          <Transition.Condition>[FailsCount &lt;= g_Config.AsInt("Recover/MaxFailsCount")]</Transition.Condition>
                        </Transition>
                      </State.Transitions>
                    </State>
                  </Transition.To>
                </Transition>
                <Transition DisplayName="Done" sap:VirtualizedContainerService.HintSize="528.8,519.2" sap2010:WorkflowViewState.IdRef="Transition_2">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:PointCollection x:Key="ConnectorLocation">210,620 210,664 355,664</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">43</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">33</x:Int32>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.To>
                    <x:Reference>__ReferenceID0</x:Reference>
                  </Transition.To>
                  <Transition.Condition>[(BotException Is Nothing AndAlso RuntimeFlow = "Producer") OrElse ShouldStop]</Transition.Condition>
                </Transition>
                <Transition DisplayName="Consumer" sap:VirtualizedContainerService.HintSize="627,1029" sap2010:WorkflowViewState.IdRef="Transition_9">
                  <Transition.Trigger>
                    <If Condition="[g_Config.AsString(&quot;Flow&quot;) = &quot;Hybrid&quot; AndAlso BotException Is Nothing]" DisplayName="If setup flow is Hybrid, now we change RuntimeFlow to Consumer" sap:VirtualizedContainerService.HintSize="468,351" sap2010:WorkflowViewState.IdRef="If_9">
                      <If.Then>
                        <Assign sap2010:Annotation.AnnotationText="When the configuration flow is defined as &quot;Hybrid&quot;, the &quot;Producer&quot; flow is executed first and then the &quot;Consumer&quot; flow.&#xA;&#xA;So, we update the RuntimeFlow variable to lead the execution to the right flow." DisplayName="Assign RuntimeFlow to Consumer" sap:VirtualizedContainerService.HintSize="434,169" sap2010:WorkflowViewState.IdRef="Assign_12">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[RuntimeFlow]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">Consumer</InArgument>
                          </Assign.Value>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </Assign>
                      </If.Then>
                      <If.Else>
                        <Sequence DisplayName="" sap2010:WorkflowViewState.IdRef="Sequence_23" />
                      </If.Else>
                    </If>
                  </Transition.Trigger>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:PointCollection x:Key="ConnectorLocation">120,620 120,850 675,850</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">7</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">57</x:Int32>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.To>
                    <State x:Name="__ReferenceID3" sap2010:Annotation.AnnotationText="Get the next transaction from Orchestrator to be processed." DisplayName="GET-TRANSACTION" sap:VirtualizedContainerService.HintSize="210,120" sap2010:WorkflowViewState.IdRef="State_5">
                      <State.Entry>
                        <Sequence sap2010:Annotation.AnnotationText="Retrieve a new transaction data to be processed.&#xA;The TransactionNumber variable holds the current transaction number and incrementing this variable makes the framework retrieve the next transaction. If the framework is retrying a failed transaction, this variable is not incremented until the maximum number of retry attempts is reached." DisplayName="Retrieve Data" sap:VirtualizedContainerService.HintSize="572,1411" sap2010:WorkflowViewState.IdRef="Sequence_8">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:ShouldStop DisplayName="Check Stop Signal" sap:VirtualizedContainerService.HintSize="510,90" sap2010:WorkflowViewState.IdRef="ShouldStop_1" Result="[ShouldStop]" />
                          <If Condition="[ShouldStop]" DisplayName="Should Stop or Get Next" sap:VirtualizedContainerService.HintSize="510,1098" sap2010:WorkflowViewState.IdRef="If_8">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence DisplayName="Orchestrator stop requested" sap:VirtualizedContainerService.HintSize="476,351" sap2010:WorkflowViewState.IdRef="Sequence_6">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:LogMessage DisplayName="Log message (Stop process requested)" sap:VirtualizedContainerService.HintSize="434,141" sap2010:WorkflowViewState.IdRef="LogMessage_5" Message="[g_Config.AsString(&quot;Framework_StopProcessRequested&quot;)]" />
                                <Assign DisplayName="End Process (Stop process requested)" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_7">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="ui:QueueItem">[TransactionItem]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="ui:QueueItem">[Nothing]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <TryCatch DisplayName="Try GetTransactionData" sap:VirtualizedContainerService.HintSize="438,565" sap2010:WorkflowViewState.IdRef="TryCatch_4">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <TryCatch.Try>
                                  <If sap2010:Annotation.AnnotationText="Check if there is no error and if the transaction is not being retried" Condition="[BotException Is Nothing AndAlso shouldMoveNext]" DisplayName="If there is no error on state transition" sap:VirtualizedContainerService.HintSize="368,337" sap2010:WorkflowViewState.IdRef="If_7">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If.Then>
                                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke GetTransactionData workflow" sap:VirtualizedContainerService.HintSize="334,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" UnSafe="False" WorkflowFileName="Framework\System\Transactions\GetTransactionData.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="x:Int32" x:Key="in_TransactionNumber">[TransactionNumber]</InArgument>
                                          <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_TransactionData">[TransactionData]</InOutArgument>
                                          <OutArgument x:TypeArguments="ui:QueueItem" x:Key="out_TransactionItem">[TransactionItem]</OutArgument>
                                          <OutArgument x:TypeArguments="x:String" x:Key="out_TransactionID">[TransactionID]</OutArgument>
                                          <OutArgument x:TypeArguments="sd:DataRow" x:Key="out_TransactionRow">[TransactionRow]</OutArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                    </If.Then>
                                    <If.Else>
                                      <Sequence DisplayName="" sap2010:WorkflowViewState.IdRef="Sequence_21" />
                                    </If.Else>
                                  </If>
                                </TryCatch.Try>
                                <TryCatch.Catches>
                                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_4">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ActivityAction x:TypeArguments="s:Exception">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                      </ActivityAction.Argument>
                                      <Sequence DisplayName="Log exception message and end process" sap:VirtualizedContainerService.HintSize="496,447" sap2010:WorkflowViewState.IdRef="Sequence_7">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign DisplayName="Assign bot exception" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_8">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="s:Exception">[BotException]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <ui:LogMessage DisplayName="Log message  (Get transaction data error)" sap:VirtualizedContainerService.HintSize="434,92" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Fatal" Message="[String.Format(g_Config.AsString(&quot;Framework_GetTransactionDataError&quot;), TransactionNumber, Exception.Message, Exception.Source)]" />
                                        <Assign DisplayName="End Process (Could not get new transaction)" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_9">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="ui:QueueItem">[TransactionItem]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="ui:QueueItem">[Nothing]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </ActivityAction>
                                  </Catch>
                                </TryCatch.Catches>
                              </TryCatch>
                            </If.Else>
                          </If>
                        </Sequence>
                      </State.Entry>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">675,760</av:Point>
                          <av:Size x:Key="ShapeSize">210,120</av:Size>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          <x:Double x:Key="StateContainerWidth">198</x:Double>
                          <x:Double x:Key="StateContainerHeight">47.04000000000008</x:Double>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <State.Transitions>
                        <Transition DisplayName="No Data" sap:VirtualizedContainerService.HintSize="722.4,519.2" sap2010:WorkflowViewState.IdRef="Transition_11">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:PointCollection x:Key="ConnectorLocation">675,790 481,790 481,730</av:PointCollection>
                              <x:Int32 x:Key="SrcConnectionPointIndex">17</x:Int32>
                              <x:Int32 x:Key="DestConnectionPointIndex">47</x:Int32>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Transition.To>
                            <x:Reference>__ReferenceID0</x:Reference>
                          </Transition.To>
                          <Transition.Condition>
                            <VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="(BotException Is Nothing AndAlso TransactionItem Is Nothing AndAlso TransactionRow Is Nothing) OrElse ShouldStop" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_6" />
                          </Transition.Condition>
                        </Transition>
                        <Transition DisplayName="Failure" sap:VirtualizedContainerService.HintSize="448.8,519.2" sap2010:WorkflowViewState.IdRef="Transition_6">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:PointCollection x:Key="ConnectorLocation">706.5,760 706.5,730 645,730 645,500 530,500 530,470</av:PointCollection>
                              <x:Int32 x:Key="SrcConnectionPointIndex">10</x:Int32>
                              <x:Int32 x:Key="DestConnectionPointIndex">67</x:Int32>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Transition.To>
                            <x:Reference>__ReferenceID2</x:Reference>
                          </Transition.To>
                          <Transition.Condition>
                            <VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="BotException IsNot Nothing AndAlso Not ShouldStop" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_5" />
                          </Transition.Condition>
                        </Transition>
                        <Transition DisplayName="Transaction" sap:VirtualizedContainerService.HintSize="785.6,519.2" sap2010:WorkflowViewState.IdRef="Transition_8">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:PointCollection x:Key="ConnectorLocation">738,760 738,620</av:PointCollection>
                              <x:Int32 x:Key="SrcConnectionPointIndex">22</x:Int32>
                              <x:Int32 x:Key="DestConnectionPointIndex">23</x:Int32>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Transition.Condition>
                            <VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="BotException Is Nothing AndAlso Not ShouldStop AndAlso (TransactionItem IsNot Nothing OrElse TransactionRow IsNot Nothing)" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_7" />
                          </Transition.Condition>
                          <Transition.To>
                            <State x:Name="__ReferenceID5" sap2010:Annotation.AnnotationText="Performs tasks related to the consumer phase." DisplayName="CONSUMER" sap:VirtualizedContainerService.HintSize="210,120" sap2010:WorkflowViewState.IdRef="State_6">
                              <State.Entry>
                                <TryCatch DisplayName="Tries to execute the Consumer process" sap:VirtualizedContainerService.HintSize="438,341" sap2010:WorkflowViewState.IdRef="TryCatch_9">
                                  <TryCatch.Try>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Consumer workflow" sap:VirtualizedContainerService.HintSize="334,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_21" UnSafe="False" WorkflowFileName="Framework\Processes\Consumer.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[TransactionItem]</InArgument>
                                        <InArgument x:TypeArguments="x:Int32" x:Key="in_TransactionNumber">[TransactionNumber]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_TransactionID">[TransactionID]</InArgument>
                                        <InArgument x:TypeArguments="sd:DataRow" x:Key="in_TransactionRow">[TransactionRow]</InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                  </TryCatch.Try>
                                  <TryCatch.Catches>
                                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_9">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ActivityAction x:TypeArguments="s:Exception">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                        </ActivityAction.Argument>
                                        <Assign DisplayName="Set exception to BotException" sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_17">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="s:Exception">[BotException]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </ActivityAction>
                                    </Catch>
                                  </TryCatch.Catches>
                                  <TryCatch.Finally>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke SetTransactionStatus workflow" sap:VirtualizedContainerService.HintSize="334,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_22" UnSafe="False" WorkflowFileName="Framework\System\Transactions\SetTransactionStatus.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[TransactionItem]</InArgument>
                                        <InOutArgument x:TypeArguments="x:Int32" x:Key="io_TransactionNumber">[TransactionNumber]</InOutArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_TransactionID">[TransactionID]</InArgument>
                                        <InArgument x:TypeArguments="s:Exception" x:Key="in_Exception">[BotException]</InArgument>
                                        <InArgument x:TypeArguments="sd:DataTable" x:Key="io_TransactionData">[TransactionData]</InArgument>
                                        <InArgument x:TypeArguments="x:Int32" x:Key="in_RetriesCount">[RetriesCount]</InArgument>
                                        <OutArgument x:TypeArguments="x:Boolean" x:Key="out_shouldMoveNext">[ShouldMoveNext]</OutArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                  </TryCatch.Finally>
                                </TryCatch>
                              </State.Entry>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <av:Point x:Key="ShapeLocation">675,500</av:Point>
                                  <av:Size x:Key="ShapeSize">210,120</av:Size>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  <x:Double x:Key="StateContainerWidth">198</x:Double>
                                  <x:Double x:Key="StateContainerHeight">47.04000000000008</x:Double>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <State.Exit>
                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke FailsReset workflow" sap:VirtualizedContainerService.HintSize="334,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_23" UnSafe="False" WorkflowFileName="Framework\System\Utils\FailsReset.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="s:Exception" x:Key="in_Exception">[BotException]</InArgument>
                                    <InOutArgument x:TypeArguments="x:Int32" x:Key="io_FailsCount">[FailsCount]</InOutArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                              </State.Exit>
                              <State.Transitions>
                                <Transition DisplayName="Success or BE" sap:VirtualizedContainerService.HintSize="540.8,764.8" sap2010:WorkflowViewState.IdRef="Transition_10">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <av:PointCollection x:Key="ConnectorLocation">843,620 843,760</av:PointCollection>
                                      <x:Int32 x:Key="SrcConnectionPointIndex">63</x:Int32>
                                      <x:Int32 x:Key="DestConnectionPointIndex">62</x:Int32>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Transition.To>
                                    <x:Reference>__ReferenceID3</x:Reference>
                                  </Transition.To>
                                  <Transition.Action>
                                    <Sequence DisplayName="Emits the OnBusinessRuleException event and resets the BotException" sap:VirtualizedContainerService.HintSize="440.8,356" sap2010:WorkflowViewState.IdRef="Sequence_9">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke OnBusinessRuleException workflow" sap:VirtualizedContainerService.HintSize="378.4,123.2" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_16" UnSafe="False" WorkflowFileName="Framework\Actions\Events\OnBusinessException.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="s:Exception" x:Key="in_Exception">[BotException]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_RuntimeFlow">[RuntimeFlow]</InArgument>
                                          <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[TransactionItem]</InArgument>
                                          <InArgument x:TypeArguments="sd:DataRow" x:Key="in_TransactionRow">[TransactionRow]</InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                      <Assign DisplayName="Resets the BotException" sap:VirtualizedContainerService.HintSize="378.4,69.6" sap2010:WorkflowViewState.IdRef="Assign_14">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="s:Exception">[BotException]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </Transition.Action>
                                  <Transition.Condition>
                                    <VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="BotException Is Nothing OrElse TypeOf BotException Is BusinessRuleException" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_9" />
                                  </Transition.Condition>
                                </Transition>
                                <Transition DisplayName="Failure" sap:VirtualizedContainerService.HintSize="567.2,519.2" sap2010:WorkflowViewState.IdRef="Transition_7">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <av:PointCollection x:Key="ConnectorLocation">780,500 780,404 560,404</av:PointCollection>
                                      <x:Int32 x:Key="SrcConnectionPointIndex">38</x:Int32>
                                      <x:Int32 x:Key="DestConnectionPointIndex">32</x:Int32>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Transition.To>
                                    <x:Reference>__ReferenceID2</x:Reference>
                                  </Transition.To>
                                  <Transition.Condition>
                                    <VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="BotException IsNot Nothing AndAlso Not TypeOf BotException Is BusinessRuleException" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_8" />
                                  </Transition.Condition>
                                </Transition>
                              </State.Transitions>
                            </State>
                          </Transition.To>
                        </Transition>
                      </State.Transitions>
                    </State>
                  </Transition.To>
                  <Transition.Action>
                    <TryCatch DisplayName="Tries to execute the OnStateTransaction event workflow" sap:VirtualizedContainerService.HintSize="438,341" sap2010:WorkflowViewState.IdRef="TryCatch_6">
                      <TryCatch.Try>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke OnStateTransition workflow" sap:VirtualizedContainerService.HintSize="334,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_14" UnSafe="False" WorkflowFileName="Framework\Actions\Events\OnStateTransition.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_FromState">PRODUCER</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_ToState">GET-TRANSACTION</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                      </TryCatch.Try>
                      <TryCatch.Catches>
                        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_6">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ActivityAction x:TypeArguments="s:Exception">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                            </ActivityAction.Argument>
                            <Assign DisplayName="Set exception to BotException" sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_11">
                              <Assign.To>
                                <OutArgument x:TypeArguments="s:Exception">[BotException]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </ActivityAction>
                        </Catch>
                      </TryCatch.Catches>
                    </TryCatch>
                  </Transition.Action>
                  <Transition.Condition>[BotException Is Nothing AndAlso RuntimeFlow = "Consumer" AndAlso Not ShouldStop]</Transition.Condition>
                </Transition>
              </State.Transitions>
            </State>
          </Transition.To>
          <Transition.Action>
            <TryCatch DisplayName="Tries to execute the OnStateTransaction event workflow" sap:VirtualizedContainerService.HintSize="436.8,364" sap2010:WorkflowViewState.IdRef="TryCatch_7">
              <TryCatch.Try>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke OnStateTransition workflow" sap:VirtualizedContainerService.HintSize="372,123.2" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_15" UnSafe="False" WorkflowFileName="Framework\Actions\Events\OnStateTransition.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="in_FromState">INIT</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_ToState">PRODUCER</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </TryCatch.Try>
              <TryCatch.Catches>
                <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="403.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_7">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ActivityAction x:TypeArguments="s:Exception">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                    </ActivityAction.Argument>
                    <Assign DisplayName="Set exception to BotException" sap:VirtualizedContainerService.HintSize="262.4,69.6" sap2010:WorkflowViewState.IdRef="Assign_13">
                      <Assign.To>
                        <OutArgument x:TypeArguments="s:Exception">[BotException]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </ActivityAction>
                </Catch>
              </TryCatch.Catches>
            </TryCatch>
          </Transition.Action>
          <Transition.Condition>
            <VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="BotException Is Nothing AndAlso RuntimeFlow = &quot;Producer&quot;" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_1" />
          </Transition.Condition>
        </Transition>
        <Transition DisplayName="Failure" sap:VirtualizedContainerService.HintSize="448.8,520.8" sap2010:WorkflowViewState.IdRef="Transition_5">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:PointCollection x:Key="ConnectorLocation">410,260 410,350</av:PointCollection>
              <x:Int32 x:Key="SrcConnectionPointIndex">19</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">18</x:Int32>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.To>
            <x:Reference>__ReferenceID2</x:Reference>
          </Transition.To>
          <Transition.Condition>
            <VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="BotException IsNot Nothing" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_2" />
          </Transition.Condition>
        </Transition>
        <Transition DisplayName="Consumer" sap:VirtualizedContainerService.HintSize="536.8,772.8" sap2010:WorkflowViewState.IdRef="Transition_13">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:PointCollection x:Key="ConnectorLocation">560,188 915,188 915,850 885,850</av:PointCollection>
              <x:Int32 x:Key="SrcConnectionPointIndex">28</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">56</x:Int32>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.To>
            <x:Reference>__ReferenceID3</x:Reference>
          </Transition.To>
          <Transition.Action>
            <TryCatch DisplayName="Tries to execute the OnStateTransaction event workflow" sap:VirtualizedContainerService.HintSize="436.8,364" sap2010:WorkflowViewState.IdRef="TryCatch_8">
              <TryCatch.Try>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke OnStateTransition workflow" sap:VirtualizedContainerService.HintSize="372,123.2" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_17" UnSafe="False" WorkflowFileName="Framework\Actions\Events\OnStateTransition.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="in_FromState">INIT</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_ToState">GET-TRANSACTION</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </TryCatch.Try>
              <TryCatch.Catches>
                <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="403.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_8">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ActivityAction x:TypeArguments="s:Exception">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                    </ActivityAction.Argument>
                    <Assign DisplayName="Set exception to BotException" sap:VirtualizedContainerService.HintSize="262.4,69.6" sap2010:WorkflowViewState.IdRef="Assign_15">
                      <Assign.To>
                        <OutArgument x:TypeArguments="s:Exception">[BotException]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </ActivityAction>
                </Catch>
              </TryCatch.Catches>
            </TryCatch>
          </Transition.Action>
          <Transition.Condition>
            <VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="BotException Is Nothing AndAlso RuntimeFlow = &quot;Consumer&quot;" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_3" />
          </Transition.Condition>
        </Transition>
      </State.Transitions>
    </State>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
    <StateMachine.Variables>
      <Variable x:TypeArguments="s:Exception" sap2010:Annotation.AnnotationText="Manage the framework exceptions." Name="BotException" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Determine the current flow the framework is running." Name="RuntimeFlow" />
      <Variable x:TypeArguments="x:Int32" sap2010:Annotation.AnnotationText="The current fails count." Name="FailsCount" />
      <Variable x:TypeArguments="x:Boolean" sap2010:Annotation.AnnotationText="Determine if the process should stop running based on the orchestrator job." Name="ShouldStop" />
      <Variable x:TypeArguments="ui:QueueItem" sap2010:Annotation.AnnotationText="Transaction item to be processed (Orchestrator queues only)." Name="TransactionItem" />
      <Variable x:TypeArguments="x:Int32" sap2010:Annotation.AnnotationText="Sequential counter of transaction items." Name="TransactionNumber" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Used for information and logging purposes. Ideally, the ID should be unique for each transaction." Name="TransactionID" />
      <Variable x:TypeArguments="sd:DataRow" sap2010:Annotation.AnnotationText="Transaction item to be processed (from CSV/EXCEL)." Name="TransactionRow" />
      <Variable x:TypeArguments="sd:DataTable" sap2010:Annotation.AnnotationText="The tabular data used for CSV/Excel queue types." Name="TransactionData" />
      <Variable x:TypeArguments="x:Int32" sap2010:Annotation.AnnotationText="The current retries count." Name="RetriesCount" />
      <Variable x:TypeArguments="x:Boolean" sap2010:Annotation.AnnotationText="Define if should move to the next item.&#xA;By default it will be true." Default="True" Name="ShouldMoveNext" />
    </StateMachine.Variables>
  </StateMachine>
</Activity>